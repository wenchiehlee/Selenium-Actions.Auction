name: Run Selenium On GitHub Action
on:
  # push:
  #  branches:
  #    - main
  schedule:
      - cron: "10 2 * * *"     # Runs every day at 10:10 AM Taiwan Time
      - cron: "10 14 * * *"    # Runs every day at 10:10 PM Taiwan Time
      - cron: "45 1 * * *"     # Runs every day at 09:45 AM Taiwan Time
  workflow_dispatch:
jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
      - name: Checking out repo
        uses: actions/checkout@v4
      - name: Setting up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Installing package list
        run: apt list --installed    
      - name: Removing previous chrome instances on runner 
        run: sudo apt purge google-chrome-stable  
        
       # Need to fetch reqs if needed
      - name: Installing all necessary packages
        run: pip install -r requirements.txt
      - name: Install xvfb
        run: sudo apt-get install xvfb

      - name: Running the Python script
        run: python Selenium.py
      - name: Big5 to UTF8
        run: |
          python ReadFile.py auction.csv Big5 | tail -n +2 |head -n -5 > total.csv # remove the first 1/last 5 line of the auction-utf8.csv

          cat 2024.csv  | tail -n +2 |head -n -6 >> total.csv
          cat 2023.csv  | tail -n +2 |head -n -6 >> total.csv
          cat 2022.csv  | tail -n +2 |head -n -6 >> total.csv
          cat 2021.csv  | tail -n +2 |head -n -6 >> total.csv
          cat 2020.csv  | tail -n +2 |head -n -6 >> total.csv
          cat 2019.csv  | tail -n +2 |head -n -6 >> total.csv
          cat 2018.csv  | tail -n +2 |head -n -6 >> total.csv
          cat 2017.csv  | tail -n +2 |head -n -6 >> total.csv

          sed -i '1s/證券名稱/公司名稱/g; 1s/證券代號/股票代號/g' total.csv
      - name: CSV filter
        run: |
          csvgrep -c "取消競價拍賣(流標或取消)"    -m "Y" total.csv > cancel.csv
          csvgrep -c "取消競價拍賣(流標或取消)" -i -m "Y" total.csv > total-cancel.csv

          csvgrep -c "發行性質" -r "^(初上市|初上櫃|創新板初上市|創新板轉列上市)$" total-cancel.csv > auction-company.csv

          csvgrep -c "發行性質" -i -r "^(初上市|初上櫃)$" auction-company.csv > auction-company-inno.csv
          csvgrep -c "發行性質"    -r "^(初上市|初上櫃)$" auction-company.csv > auction-company-filter.csv

          csvgrep -c "得標總金額(元)" -i -r '^(0|0\.0|0\.00)$' auction-company.csv > auctioned.csv
          csvgrep -c "得標總金額(元)"    -r '^(0|0\.0|0\.00)$' auction-company.csv > tobe-auctioned.csv

          csvgrep -c "發行性質" -i -r "^(初上市|初上櫃)$" auctioned.csv > auctioned-inno.csv
          csvgrep -c "發行性質"    -r "^(初上市|初上櫃)$" auctioned.csv > auctioned-filter.csv
          csvgrep -c "發行性質"    -r "^(初上市|初上櫃)$" tobe-auctioned.csv > tobe-auctioned-filter.csv

          csvcut -c "股票代號,公司名稱,投標開始日,投標結束日,開標日期,實際承銷價格(元),最低得標價格(元)" auctioned-filter.csv > 已開標名單.csv
          csvcut -c "股票代號,公司名稱,投標開始日,投標結束日,開標日期,實際承銷價格(元),最低得標價格(元)" tobe-auctioned.csv > 未來競標名單.csv
          csvcut -c "股票代號,公司名稱,投標開始日,投標結束日,開標日期,實際承銷價格(元),最低得標價格(元)" auction-company-filter.csv > "競標公司(初上市櫃)名單.csv"
          
          # python csv-merge.py
          # csvstack auction-utf8-filter.csv 2024-utf8-filter.csv 2023-utf8-filter.csv 2022-utf8-filter.csv 2021-utf8-filter.csv 2020-utf8-filter.csv 2019-utf8-filter.csv 2018-utf8-filter.csv 2017-utf8-filter.csv> total-fiter.csv

      - name: Read CSV and remove no need lines
        id: csv
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          csvfile=$(cat total.csv)    
          echo "content<<$EOF" >> $GITHUB_OUTPUT
          echo "$csvfile"      >> $GITHUB_OUTPUT
          echo "$EOF"          >> $GITHUB_OUTPUT
      - name: Lines count
        run: |
          python CountCSVLine.py total.json total.csv "TWSE+TPEX 競標"
          python CountCSVLine.py cancel.json cancel.csv "TWSE+TPEX 競標-取消"
          python CountCSVLine.py auction-company.json auction-company.csv "TWSE+TPEX 競標公司"
          python CountCSVLine.py auction-company-filter.json auction-company-filter.csv "TWSE+TPEX 競標公司(初上市櫃)"
          python CountCSVLine.py auction-company-inno.json auction-company-inno.csv "TWSE+TPEX 競標公司(創新上市櫃)"
          python CountCSVLine.py auctioned.json auctioned.csv "TWSE+TPEX 競標公司-完成"
          python CountCSVLine.py auctioned-filter.json auctioned-filter.csv "TWSE+TPEX 競標公司(初上市櫃)-完成"
          python CountCSVLine.py auctioned-inno.json auctioned-inno.csv "TWSE+TPEX 競標公司(創新上市櫃)-完成"
          python CountCSVLine.py tobe-auctioned.json tobe-auctioned.csv "TWSE+TPEX 競標公司-未完成"
      #- name: Create MD
      #  uses: petems/csv-to-md-table-action@master
      #  id: csv-table-output
      #  with:
      #    csvinput: ${{ steps.csv.outputs.content }}  
      #
      #- name: Echo Markdown Table
      #  run: echo "${{steps.csv-table-output.outputs.markdown-table}}" > csv.md
      # - name: Create MD
      #   id: csv-table-output
      #   run: |
      #     python csv-to-md.py auction-utf8.csv utf8 > auction-utf8.md
      #     python csv-to-md.py auction-utf8-filter.csv utf8 > auction-utf8-filter.md
      #     python csv-to-md.py 2024-utf8.csv utf8 > 2024-utf8.md
      #     python csv-to-md.py 2024-utf8-filter.csv utf8 > 2024-utf8-filter.md
      #     python csv-to-md.py 2023-utf8.csv utf8 > 2023-utf8.md
      #     python csv-to-md.py 2023-utf8-filter.csv utf8 > 2023-utf8-filter.md
      #     python csv-to-md.py 2022-utf8.csv utf8 > 2022-utf8.md
      #     python csv-to-md.py 2022-utf8-filter.csv utf8 > 2022-utf8-filter.md
      #     python csv-to-md.py 2021-utf8.csv utf8 > 2021-utf8.md
      #     python csv-to-md.py 2021-utf8-filter.csv utf8 > 2021-utf8-filter.md
      #     python csv-to-md.py 2020-utf8.csv utf8 > 2020-utf8.md
      #     python csv-to-md.py 2020-utf8-filter.csv utf8 > 2020-utf8-filter.md
      #     python csv-to-md.py 2019-utf8.csv utf8 > 2019-utf8.md
      #     python csv-to-md.py 2019-utf8-filter.csv utf8 > 2019-utf8-filter.md
      #     python csv-to-md.py 2018-utf8.csv utf8 > 2018-utf8.md
      #     python csv-to-md.py 2018-utf8-filter.csv utf8 > 2018-utf8-filter.md
      #     python csv-to-md.py 2017-utf8.csv utf8 > 2017-utf8.md
      #     python csv-to-md.py 2017-utf8-filter.csv utf8 > 2017-utf8-filter.md
      #     python csv-to-md.py 2020-Now-utf8-filter.csv utf8 > 2020-Now-utf8-filter.md
      - name: Get all changed on *.csv
        id: changed-csv-files
        uses: tj-actions/changed-files@v45
        with:
          # Avoid using single or double quotes for multiline patterns
          files: |
            **.csv
      - name: List all changed files csv files if csv changed
        if: steps.changed-csv-files.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-csv-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
            if [ "$file" = "total.csv" ]; then
              echo "total.csv:change!!"
            fi
          done
      - name: Repository Dispatch
        if: steps.changed-csv-files.outputs.any_changed == 'true'     
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.repository_dispatch }}
          repository: wenchiehlee/twstock
          event-type: 2020-Now-utf8-filter.csv
      #- name: Push generated MD pages to another repository
      #  uses: nkoppel/push-files-to-another-repository@v1.1.3
      #  env:
      #    API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      #  with:
      #    source-files: 'csv.md'
      #    destination-username: 'wenchiehlee'
      #    destination-repository: 'mkdocs'
      #    destination-directory: 'projects/my-project'
      #    commit-username: "github-actions[bot]"
      #    commit-email: "41898282+github-actions[bot]@users.noreply.github.com"
      #    #commit-message:
      - name: Commit and Push The Results From Python Selenium Action
        run: |
         git config --global user.name "github-actions[bot]"
         git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
         git add -A
         git commit -m "⬆️ GitHub Actions Results added" || true
         git push || true
